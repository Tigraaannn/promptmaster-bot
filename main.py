import telebot
from telebot import types
import os

BOT_TOKEN = os.getenv("BOT_TOKEN")
bot = telebot.TeleBot(BOT_TOKEN)

# üîí –•—Ä–∞–Ω–∏–º, –∫—Ç–æ –≤–≤–æ–¥–∏—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–π –ø—Ä–æ–º—Ç
user_states = {}

# üìÅ –ù–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
PROMPT_FILES = {
    "–£—á—ë–±–∞": {
        "–†–µ—Ñ–µ—Ä–∞—Ç": "ref_prompt_template.docx",
        "–ö–æ–Ω—Å–ø–µ–∫—Ç –ª–µ–∫—Ü–∏–∏": "lecture_summary_prompt_template.docx"
    },
    "–ë–∏–∑–Ω–µ—Å": {
        "–û—Ñ—Ñ–µ—Ä": "offer_prompt_template.docx",
        "–õ–µ–Ω–¥–∏–Ω–≥": "landing_prompt_template.docx",
        "–î–µ–ª–æ–≤–æ–µ –ø–∏—Å—å–º–æ": "business_letter_prompt_template.docx",
        "Instagram –ø–æ—Å—Ç": "instagram_post_prompt_template.docx"
    },
    "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π": {
        "–ü—Ä–æ–º—Ç –¥–ª—è –∫–∞—Ä—Ç–∏–Ω–∫–∏": "image_generation_prompt_template.docx"
    },
    "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ": {
        "–ü—Ä–æ–º—Ç –¥–ª—è –≤–∏–¥–µ–æ": "video_prompt_template.docx"
    }
}

# ‚ú® –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
WELCOME_TEXT = """
üëã –ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–æ—Ç PromptMaster.

–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–º—Ç—ã –¥–ª—è –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ ‚Äî –¥–ª—è —É—á—ë–±—ã, –±–∏–∑–Ω–µ—Å–∞, –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –≤–∏–¥–µ–æ.

üìå –ü—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é ‚Äî –∏ —è –ø—Ä–∏—à–ª—é –Ω—É–∂–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã.

–•–æ—á–µ—à—å —á—Ç–æ-—Ç–æ —Å–≤–æ—ë? –ñ–º–∏ ‚úçÔ∏è –ö–∞—Å—Ç–æ–º–Ω—ã–π –ø—Ä–æ–º—Ç.
"""

@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for category in PROMPT_FILES.keys():
        markup.add(category)
    markup.add("‚úçÔ∏è –ö–∞—Å—Ç–æ–º–Ω—ã–π –ø—Ä–æ–º—Ç")
    bot.send_message(message.chat.id, WELCOME_TEXT, reply_markup=markup)

@bot.message_handler(func=lambda msg: msg.text in PROMPT_FILES)
def show_prompts(msg):
    category = msg.text
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    for title in PROMPT_FILES[category]:
        markup.add(title)
    markup.add("‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
    bot.send_message(msg.chat.id, f"üìÇ {category}: –≤—ã–±–µ—Ä–∏ –ø—Ä–æ–º—Ç", reply_markup=markup)

@bot.message_handler(func=lambda msg: msg.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
def back(msg):
    send_welcome(msg)

@bot.message_handler(func=lambda msg: msg.text == "‚úçÔ∏è –ö–∞—Å—Ç–æ–º–Ω—ã–π –ø—Ä–æ–º—Ç")
def custom_prompt_start(msg):
    user_states[msg.chat.id] = "awaiting_custom"
    bot.send_message(msg.chat.id, "‚úèÔ∏è –ù–∞–ø–∏—à–∏, –∫–∞–∫–æ–π –ø—Ä–æ–º—Ç —Ç–µ–±–µ –Ω—É–∂–µ–Ω ‚Äî —è –ø–µ—Ä–µ–¥–∞–º –µ–≥–æ –∫–æ–º–∞–Ω–¥–µ!")

@bot.message_handler(func=lambda msg: user_states.get(msg.chat.id) == "awaiting_custom")
def handle_custom_prompt(msg):
    bot.send_message(msg.chat.id, "‚úÖ –°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ —Ç–≤–æ–π –∫–∞—Å—Ç–æ–º–Ω—ã–π –∑–∞–ø—Ä–æ—Å.")
    user_states.pop(msg.chat.id)

@bot.message_handler(func=lambda msg: True)
def send_file(msg):
    for prompts in PROMPT_FILES.values():
        if msg.text in prompts:
            try:
                with open(prompts[msg.text], "rb") as f:
                    bot.send_document(msg.chat.id, f)
            except:
                bot.send_message(msg.chat.id, "‚ùó–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return
    bot.send_message(msg.chat.id, "–Ø –Ω–µ –ø–æ–Ω—è–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç —Å –∫–Ω–æ–ø–∫–∏.")

bot.polling(none_stop=True)
